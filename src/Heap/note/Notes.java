package Heap.note;

public interface Notes {
    /**
     * 堆主要引用在堆排序上：复杂度为 O(nlogn)
     *
     *  Def: 堆（Heap）：是一种【数组】对象，可以被视作一颗完全二叉树，也可以被称为【二叉堆】
     *       完全二叉树：除第h层外，其他各层（1 ～ h-1）的节点数都达到最大个数，第h层所有的节点都连续集中在最左边，这就是完全二叉树
     *
     *  堆的性质：
     *      Parent(i): i / 2
     *      Left:  2 * i
     *      Right: 2 * i + 1
     *
     *
     *  最大堆：堆中某个节点的值总是不大于其父亲节点的值
     *  最小堆：堆中某个节点的值总是不小于其父亲节点的值
     *
     *  增加一个节点：Sift Up
     *  删除一个节点：Sift Down --> 删除总是发生在头部，处理的方式是将最后元素放到头部，然后不断的和其子节点比较大小，从而确定位置
     */
}
